!function(){"use strict";function a(){var a={retina:"only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx)",phone:"(max-width: 767px)",tablet:"(min-width: 768px) and (max-width: 1024px)",desktop:"(min-width: 1025px)",portrait:"(orientation: portrait)",landscape:"(orientation: landscape)"},b={reloadOnResize:!0},c={};this.config=function(a){angular.extend(b,a||{})},this.addRules=function(b){angular.extend(a,b)},this.addExtensions=function(a){angular.extend(c,a)},this.$get=["screenSize","$log","$rootScope","$state","$timeout",function(d,e,g,i,j){function k(){d.rules=a,angular.forEach(Object.keys(c),function(a){var b=q(c[a]);e.debug("Handling extension",a,"with rules",b),v[p(a)]=o(b,a)}),l()}function l(){function a(){var a=i.current;if(a){var b=u(a);if(b&&!v.is(h)){var d=v.matchingRules();e.log("Current match",h,"is no longer valid. Looking for a new match in",d),angular.forEach(b,function(a){v.is(a)&&(e.log("Perform reload because of a new match",a,"while current match is",h),c())})}}}function c(){e.log("doReload to state",i.current.name),i.reload(i.current)}window.addEventListener("resize",function(){e.debug("Resizing. Current matching rules",n(),". Current layout",h),b.reloadOnResize&&a()})}function m(a){return!(!angular.isString(a)||!_.intersection(this.matchingRules(),s(a)).length)||(a in c?this[p(a)]():a in this.screenSize.rules?this.screenSize.is(a):!!angular.isArray(a)&&o(a)())}function n(){var a=[];return angular.forEach(d.rules,function(b,c){var d=window.matchMedia(b).matches;d&&a.push(c)}),a}function o(a,b){var c=r(a);return c?(b&&(e.debug("Add rule ",c,"with key",b,"to screenSize service"),v.screenSize.rules[b]=c),function(){v.screenSize.is(c)}):(e.debug("Build a complex rule"),function(){var b=!0;return angular.forEach(a,function(a){angular.isString(a)?b&=d.is(a):angular.isFunction(a)&&(b&=a(v))}),!!b})}function p(a){return"is"+f(a)}function q(a){return angular.isArray(a)?a:[a]}function r(a){var b=a.map(function(a){var b=s(a);return b.map(t).join(",")}).join(" and ");if(b.indexOf("undefined")===-1)return b}function s(a){return a.split(/\s*,\s*/g)}function t(a){return v.screenSize.rules[a]}function u(a){return(a.data||{}).responsive}var v={init:k,screenSize:d,is:m,matchingRules:n};return v}]}function b(){return{restrict:"A",require:"mfwResponsiveMatch",link:function(a,b,c,d){var e=c.mfwResponsiveMatch||i;d.bindTo(angular.element(b),e)},controller:["$mfwResponsive",function(a){function b(b,c){angular.forEach(Object.keys(a.screenSize.rules),function(d){a.screenSize.on(d,function(a){a?b.addClass(c+d):b.removeClass(c+d)})})}this.bindTo=b}]}}function c(a,b){return{restrict:"A",terminal:!0,priority:1001,compile:function(c){c.removeAttr("responsive-show-when");var d=e();c.attr("ng-if",d+"()");var f=a(c,null,1500);return function(a,c,e){var g=e.mfwResponsiveWhen;a[d]=function(){return b.is(g)},f(a)}}}}function d(a){a.decorator("views",function(a,b){var c={},d=b(a),e=[];return angular.forEach(d,function(a,b){var d=a.responsive;if(d){e=e.concat(Object.keys(d));var f=angular.copy(a);f.templateProvider=["$templateCache","$templateFactory","$mfwResponsive","$log",function(a,b,c,e){var f=null,g=Object.keys(d).filter(c.is,c);if(g.length){g.length>1&&e.warn("More than one rule (",g,") apply for current screen size:",c.matchingRules());var i=g[0];h=i,f=d[i],e.log("Resolved layout",i,"with templateUrl",f)}return f||e.error("No templateUrl found for responsiveConfig",d,"current layout is",c.matchingRules()),b.fromUrl(f)}],c[b]=f}else c[b]=a}),a.data=angular.extend(a.data||{},{responsive:e}),c})}function e(a){var b=Math.ceil(1e3*Math.random())+1;return a+b}function f(a){var b=a.replace(/([\:\-\_]+(.))/g,function(a,b,c,d){return d?c.toUpperCase():c});return b.charAt(0).toUpperCase()+b.substr(1)}var g=angular.module("mfw.responsive",["matchMedia"]);g.run(["$mfwResponsive",function(a){a.init()}]);var h,i="device-";g.provider("$mfwResponsive",a),g.directive("mfwResponsiveMatch",b),b.$inject=[],g.directive("mfwResponsiveWhen",c),c.$inject=["$compile","$mfwResponsive"],g.config(d),d.$inject=["$stateProvider"]}();
//# sourceMappingURL=mfw-responsive.service.min.js.map